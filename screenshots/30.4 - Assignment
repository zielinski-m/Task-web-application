
GIST LINK https://gist.github.com/zielinski-m/2b237d63f667bcb8167c458eb1e66e7c

CREATE TABLE BOOKS_AUD (
                           EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
                           EVENT_DATE DATETIME NOT NULL,
                           EVENT_TYPE VARCHAR(10) DEFAULT NULL,
                           BOOK_ID INT(11) NOT NULL,
                           OLD_TITLE VARCHAR(255),
                           NEW_TITLE VARCHAR(255),
                           OLD_PUBYEAR INT(11),
                           NEW_PUBYEAR INT(11),
                           OLD_BESTSELLER INT(11),
                           NEW_BESTSELLER INT(11),
                           PRIMARY KEY (EVENT_ID)
);

CREATE TABLE READERS_AUD (
                             EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
                             EVENT_DATE DATETIME NOT NULL,
                             EVENT_TYPE VARCHAR(10) DEFAULT NULL,
                             READER_ID INT(11) NOT NULL,
                             OLD_FIRSTNAME VARCHAR(255),
                             NEW_FIRSTNAME VARCHAR(255),
                             OLD_LASTNAME VARCHAR(255),
                             NEW_LASTNAME VARCHAR(255),
                             OLD_PESELID VARCHAR(255),
                             NEW_PESELID VARCHAR(255),
                             OLD_VIP_LEVEL VARCHAR(255),
                             NEW_VIP_LEVEL VARCHAR(255),
                             PRIMARY KEY (EVENT_ID)
);


DELIMITER $$
CREATE TRIGGER BOOKS_INSERT AFTER INSERT ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR, NEW_BESTSELLER)
    VALUES (CURTIME(), 'INSERT', NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER);
END $$
DELIMITER ;


INSERT INTO BOOKS (BOOK_ID, TITLE, PUBYEAR, BESTSELLER)
VALUES (24, 'Lord of the rings', 2002, 1);
COMMIT;


DELIMITER $$
CREATE TRIGGER BOOKS_DELETE AFTER DELETE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID)
    VALUES (CURTIME(), 'DELETE', OLD.BOOK_ID);
END $$
DELIMITER ;

DELETE FROM books WHERE BOOK_ID = 24;
COMMIT;

DELIMITER $$
CREATE TRIGGER BOOKS_UPDATE AFTER UPDATE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR, NEW_BESTSELLER,
                           OLD_TITLE, OLD_PUBYEAR, OLD_BESTSELLER)
    VALUES (CURTIME(), 'UPDATE', OLD.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER,
            OLD.TITLE, OLD.PUBYEAR, OLD.BESTSELLER);
END $$
DELIMITER ;


UPDATE BOOKS SET PUBYEAR = 2022 WHERE BOOK_ID = 5;
COMMIT;


DELIMITER $$
CREATE TRIGGER READERS_INSERT AFTER INSERT ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID, NEW_VIP_LEVEL)
    VALUES (CURTIME(), 'INSERT', NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL);
END $$
DELIMITER ;


INSERT INTO READERS (READER_ID, FIRSTNAME, LASTNAME, PESELID, VIP_LEVEL)
VALUES (12, 'Emily', 'Davis', '96050612345', 'Silver customer');

INSERT INTO READERS (READER_ID, FIRSTNAME, LASTNAME, PESELID, VIP_LEVEL)
VALUES (13, 'John', 'K.', '931465842', 'Standard customer');
COMMIT;


DELIMITER $$
CREATE TRIGGER READERS_DELETE AFTER DELETE ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID)
    VALUES (CURTIME(), 'DELETE', OLD.READER_ID);
END $$
DELIMITER ;

DELETE FROM READERS WHERE READER_ID = 13;
COMMIT;


DELIMITER $$
CREATE TRIGGER READERS_UPDATE AFTER UPDATE ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID, NEW_VIP_LEVEL,
                             OLD_FIRSTNAME, OLD_LASTNAME, OLD_PESELID, OLD_VIP_LEVEL)
    VALUES (CURTIME(), 'UPDATE', OLD.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL,
            OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID, OLD.VIP_LEVEL);
END $$
DELIMITER ;

UPDATE READERS SET VIP_LEVEL = 'Standard customer' WHERE READER_ID = 1;
COMMIT;
